{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yuzu\\\\Desktop\\\\pjt\\\\Todos\\\\todo-react\\\\todos-front\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport TodoForm from \"./components/TodoForm\";\nimport TodoList from \"./components/TodoList\";\nimport classes from \"./App.module.css\";\nimport api from \"./api/todo\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [todos, setTodos] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [fetchError, setFetchError] = useState(null); // GET all todos\n\n  useEffect(() => {\n    const fetchTodos = async () => {\n      setIsLoading(true);\n      setFetchError(null);\n\n      try {\n        const response = await api.get(\"/todo\");\n        setTodos(response.data);\n      } catch (err) {\n        setFetchError(err.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchTodos();\n  }, []); // POST create todo\n\n  const saveTodoHandler = async todo => {\n    const id = todos.length ? todos[todos.length - 1].id + 1 : 1;\n    const newTodo = {\n      id,\n      title: todo,\n      completed: false\n    };\n\n    try {\n      const response = await api.post('/todo', newTodo);\n      const allTodos = [...todos, response.data];\n      setTodos(allTodos);\n    } catch (err) {\n      console.log(err.message);\n    }\n  }; // PUT update todo\n\n\n  const changeCompletedHandler = async todoId => {\n    const oldTodo = todos.find(todo => todo.id === todoId);\n    const updatedTodo = { ...oldTodo,\n      completed: !oldTodo.completed\n    };\n\n    try {\n      const response = await api.put(`/todo/${todoId}`, updatedTodo);\n      setTodos(todos.map(todo => todo.id === todoId ? { ...response.data\n      } : todo));\n    } catch (err) {\n      console.log(err.message);\n    }\n  }; // DELETE todo\n\n\n  const removeTodoHandler = async todoId => {\n    try {\n      await api.delete(`/todo/${todoId}`);\n      const updatedTodo = todos.filter(todo => todo.id !== todoId);\n      setTodos(updatedTodo);\n    } catch (err) {\n      console.log(err.message);\n    }\n  }; // content \n\n\n  let content = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Found no todos. Write your own!\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 17\n  }, this);\n\n  if (todos.length > 0) {\n    content = /*#__PURE__*/_jsxDEV(TodoList, {\n      todoItems: todos,\n      onChangeCompleted: changeCompletedHandler,\n      onRemoveTodo: removeTodoHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (fetchError) content = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Error occured!\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 29\n  }, this);\n  if (isLoading) content = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 28\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.todo,\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: classes.todoHeader,\n      children: \"Your Daily Todos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TodoForm, {\n      onAddTodo: saveTodoHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), content]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"I+vmY6eUqdI36qit4v0roU/+8u8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","TodoForm","TodoList","classes","api","App","todos","setTodos","isLoading","setIsLoading","fetchError","setFetchError","fetchTodos","response","get","data","err","message","saveTodoHandler","todo","id","length","newTodo","title","completed","post","allTodos","console","log","changeCompletedHandler","todoId","oldTodo","find","updatedTodo","put","map","removeTodoHandler","delete","filter","content","todoHeader"],"sources":["C:/Users/yuzu/Desktop/pjt/Todos/todo-react/todos-front/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nimport TodoForm from \"./components/TodoForm\";\r\nimport TodoList from \"./components/TodoList\";\r\nimport classes from \"./App.module.css\";\r\nimport api from \"./api/todo\";\r\n\r\nfunction App() {\r\n  const [todos, setTodos] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [fetchError, setFetchError] = useState(null);\r\n\r\n  // GET all todos\r\n  useEffect(() => {\r\n    const fetchTodos = async () => {\r\n      setIsLoading(true);\r\n      setFetchError(null);\r\n      try {\r\n        const response = await api.get(\"/todo\");\r\n        setTodos(response.data);\r\n      } catch (err) {\r\n        setFetchError(err.message);\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchTodos();\r\n  }, []);\r\n\r\n  // POST create todo\r\n  const saveTodoHandler = async (todo) => {\r\n    const id = todos.length ? todos[todos.length - 1].id + 1 : 1;\r\n    const newTodo = {\r\n      id,\r\n      title: todo,\r\n      completed: false\r\n    }\r\n\r\n    try {\r\n      const response = await api.post('/todo', newTodo);\r\n      const allTodos = [...todos, response.data];\r\n      setTodos(allTodos);\r\n    } catch (err) {\r\n      console.log(err.message);\r\n    }\r\n  };\r\n\r\n  // PUT update todo\r\n  const changeCompletedHandler = async (todoId) => {\r\n\r\n    const oldTodo = todos.find(todo => todo.id === todoId);\r\n    const updatedTodo = {...oldTodo, completed: !oldTodo.completed};\r\n\r\n    try {\r\n      const response = await api.put(`/todo/${todoId}`, updatedTodo);\r\n      setTodos(todos.map(todo => todo.id === todoId ? { ...response.data } : todo));\r\n    } catch (err) {\r\n      console.log(err.message);\r\n    }\r\n  };\r\n\r\n  // DELETE todo\r\n  const removeTodoHandler = async (todoId) => {\r\n    try {\r\n      await api.delete(`/todo/${todoId}`);\r\n      const updatedTodo = todos.filter((todo) => todo.id !== todoId);\r\n      setTodos(updatedTodo);\r\n    } catch (err) {\r\n      console.log(err.message);\r\n    }\r\n  };\r\n\r\n  // content \r\n  let content = <p>Found no todos. Write your own!</p>;\r\n\r\n  if (todos.length > 0) {\r\n    content = (\r\n      <TodoList\r\n        todoItems={todos}\r\n        onChangeCompleted={changeCompletedHandler}\r\n        onRemoveTodo={removeTodoHandler}\r\n      />\r\n    );\r\n  }\r\n\r\n  if (fetchError) content = <p>Error occured!</p>;\r\n\r\n  if (isLoading) content = <p>Loading...</p>;\r\n\r\n  return (\r\n    <div className={classes.todo}>\r\n      <h3 className={classes.todoHeader}>Your Daily Todos</h3>\r\n      <TodoForm onAddTodo={saveTodoHandler} />\r\n      {content}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,OAAOC,GAAP,MAAgB,YAAhB;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;EACA,MAAM,CAACS,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAC,KAAD,CAA1C;EACA,MAAM,CAACW,UAAD,EAAaC,aAAb,IAA8BZ,QAAQ,CAAC,IAAD,CAA5C,CAHa,CAKb;;EACAC,SAAS,CAAC,MAAM;IACd,MAAMY,UAAU,GAAG,YAAY;MAC7BH,YAAY,CAAC,IAAD,CAAZ;MACAE,aAAa,CAAC,IAAD,CAAb;;MACA,IAAI;QACF,MAAME,QAAQ,GAAG,MAAMT,GAAG,CAACU,GAAJ,CAAQ,OAAR,CAAvB;QACAP,QAAQ,CAACM,QAAQ,CAACE,IAAV,CAAR;MACD,CAHD,CAGE,OAAOC,GAAP,EAAY;QACZL,aAAa,CAACK,GAAG,CAACC,OAAL,CAAb;MACD,CALD,SAKU;QACRR,YAAY,CAAC,KAAD,CAAZ;MACD;IACF,CAXD;;IAaAG,UAAU;EACX,CAfQ,EAeN,EAfM,CAAT,CANa,CAuBb;;EACA,MAAMM,eAAe,GAAG,MAAOC,IAAP,IAAgB;IACtC,MAAMC,EAAE,GAAGd,KAAK,CAACe,MAAN,GAAef,KAAK,CAACA,KAAK,CAACe,MAAN,GAAe,CAAhB,CAAL,CAAwBD,EAAxB,GAA6B,CAA5C,GAAgD,CAA3D;IACA,MAAME,OAAO,GAAG;MACdF,EADc;MAEdG,KAAK,EAAEJ,IAFO;MAGdK,SAAS,EAAE;IAHG,CAAhB;;IAMA,IAAI;MACF,MAAMX,QAAQ,GAAG,MAAMT,GAAG,CAACqB,IAAJ,CAAS,OAAT,EAAkBH,OAAlB,CAAvB;MACA,MAAMI,QAAQ,GAAG,CAAC,GAAGpB,KAAJ,EAAWO,QAAQ,CAACE,IAApB,CAAjB;MACAR,QAAQ,CAACmB,QAAD,CAAR;IACD,CAJD,CAIE,OAAOV,GAAP,EAAY;MACZW,OAAO,CAACC,GAAR,CAAYZ,GAAG,CAACC,OAAhB;IACD;EACF,CAfD,CAxBa,CAyCb;;;EACA,MAAMY,sBAAsB,GAAG,MAAOC,MAAP,IAAkB;IAE/C,MAAMC,OAAO,GAAGzB,KAAK,CAAC0B,IAAN,CAAWb,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYU,MAA/B,CAAhB;IACA,MAAMG,WAAW,GAAG,EAAC,GAAGF,OAAJ;MAAaP,SAAS,EAAE,CAACO,OAAO,CAACP;IAAjC,CAApB;;IAEA,IAAI;MACF,MAAMX,QAAQ,GAAG,MAAMT,GAAG,CAAC8B,GAAJ,CAAS,SAAQJ,MAAO,EAAxB,EAA2BG,WAA3B,CAAvB;MACA1B,QAAQ,CAACD,KAAK,CAAC6B,GAAN,CAAUhB,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYU,MAAZ,GAAqB,EAAE,GAAGjB,QAAQ,CAACE;MAAd,CAArB,GAA4CI,IAA9D,CAAD,CAAR;IACD,CAHD,CAGE,OAAOH,GAAP,EAAY;MACZW,OAAO,CAACC,GAAR,CAAYZ,GAAG,CAACC,OAAhB;IACD;EACF,CAXD,CA1Ca,CAuDb;;;EACA,MAAMmB,iBAAiB,GAAG,MAAON,MAAP,IAAkB;IAC1C,IAAI;MACF,MAAM1B,GAAG,CAACiC,MAAJ,CAAY,SAAQP,MAAO,EAA3B,CAAN;MACA,MAAMG,WAAW,GAAG3B,KAAK,CAACgC,MAAN,CAAcnB,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYU,MAAnC,CAApB;MACAvB,QAAQ,CAAC0B,WAAD,CAAR;IACD,CAJD,CAIE,OAAOjB,GAAP,EAAY;MACZW,OAAO,CAACC,GAAR,CAAYZ,GAAG,CAACC,OAAhB;IACD;EACF,CARD,CAxDa,CAkEb;;;EACA,IAAIsB,OAAO,gBAAG;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAAd;;EAEA,IAAIjC,KAAK,CAACe,MAAN,GAAe,CAAnB,EAAsB;IACpBkB,OAAO,gBACL,QAAC,QAAD;MACE,SAAS,EAAEjC,KADb;MAEE,iBAAiB,EAAEuB,sBAFrB;MAGE,YAAY,EAAEO;IAHhB;MAAA;MAAA;MAAA;IAAA,QADF;EAOD;;EAED,IAAI1B,UAAJ,EAAgB6B,OAAO,gBAAG;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAAV;EAEhB,IAAI/B,SAAJ,EAAe+B,OAAO,gBAAG;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAAV;EAEf,oBACE;IAAK,SAAS,EAAEpC,OAAO,CAACgB,IAAxB;IAAA,wBACE;MAAI,SAAS,EAAEhB,OAAO,CAACqC,UAAvB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,QAAD;MAAU,SAAS,EAAEtB;IAArB;MAAA;MAAA;MAAA;IAAA,QAFF,EAGGqB,OAHH;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAOD;;GA1FQlC,G;;KAAAA,G;AA4FT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}